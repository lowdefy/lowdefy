# Copyright 2020-2024 Lowdefy, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http:www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_ref:
  path: templates/blocks/template.yaml.njk
  vars:
    block_type: S3UploadDragger
    value_type: object
    category: input
    schema: ../plugins/plugins/plugin-aws/src/blocks/S3UploadDragger/schema.json
    filePath: blocks/input/S3UploadDragger.yaml
    description_content: |
      The `S3UploadDragger` block allows a user to to upload a file to AWS S3.

      The `s3PostPolicyRequestId` property is required, and should be the `id` of a [`AwsS3PresignedPostPolicy`](/AWSS3) request. This request is called by the block when the user uploads a file, to create a policy that allows a file to be uploaded to AWS S3.

      The block has an object value in state, with a `file` key, which has an object corresponding to the last uploaded file, and a `fileList` array with objects for each the files.

      It provides a draggable content area for file upload, with a default text. It also exposes an `onPaste` event that can be used to handle pasted files.

      For the examples to work, a `AwsS3Bucket` connection is required. For example:
      ```yaml
        connections:
        - id: files
          type: AwsS3Bucket
          properties:
            accessKeyId:
              _secret: FILES_S3_ACCESS_KEY_ID
            secretAccessKey:
              _secret: FILES_S3_SECRET_ACCESS_KEY
            region: af-south-1
            bucket:
              _secret: FILES_S3_BUCKET
            write: true

      > The examples on this page is not setup with a [`AwsS3Bucket`](/AWSS3) connection, and thus will throw.

      ```
    init_state_values:
      block_id:
        file:
          key: 'example.pdf'
          type: 'application/pdf'
          name: example.pdf
        fileList:
          - key: 'example.pdf'
            type: 'application/pdf'
            name: example.pdf
          - key: 'example_two.pdf'
            type: 'application/pdf'
            name: example_two.pdf
    # methods:
    #   - name: uploadFromPaste
    #     onPaste:
    #       - id: uploadFromPaste
    #         type: CallMethod
    #         params:
    #           blockId: block_id
    #           method: uploadFromPaste
    examples:
      - title: Basic S3UploadDragger Example
        block:
          id: attach_files
          type: S3UploadDragger
          properties:
            s3PostPolicyRequestId: upload
          requests:
            - id: upload
              type: AwsS3PresignedPostPolicy
              connectionId: files
              payload:
                filename:
                  _event: file.name
                content_type:
                  _event: file.type
              properties:
                fields:
                  Content-Type:
                    _payload: content_type
                key:
                  _nunjucks:
                    template: '{{ now | date("YYYYMMDD_HHmmssS") }}_{{ filename }}'
                    on:
                      now:
                        _date: now
                      filename:
                        _payload: filename
      - title: S3UploadDragger Example with onPaste event
        block:
          id: on_file_paste
          type: Box
          events:
            onPaste:
              - id: upload
                type: CallMethod
                params:
                  blockId: attach_files
                  method: uploadFromPaste
                  args:
                    - _event: true
          blocks:
            - id: text_input
              type: TextArea
            - id: attach_files
              type: S3UploadDragger
              properties:
                s3PostPolicyRequestId: upload_file
              requests:
                - id: upload_file
                  type: AwsS3PresignedPostPolicy
                  connectionId: files
                  payload:
                    filename:
                      _event: file.name
                    content_type:
                      _event: file.type
                  properties:
                    fields:
                      Content-Type:
                        _payload: content_type
                    key:
                      _nunjucks:
                        template: '{{ now | date("YYYYMMDD_HHmmssS") }}_{{ filename }}'
                        on:
                          now:
                            _date: now
                          filename:
                            _payload: filename
