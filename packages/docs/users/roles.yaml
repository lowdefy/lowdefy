# Copyright 2020-2024 Lowdefy, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_ref:
  path: templates/general.yaml.njk
  vars:
    pageId: roles
    pageTitle: Roles
    section: User Authentication
    filePath: users/roles.yaml
    content:
      - id: content
        type: MarkdownWithCode
        properties:
          content:
            _nunjucks:
              on:
                version:
                  _ref: version.yaml
              template: |
                Roles can be used to limit user access to certain pages. Only users with a role linked to the page will be able to see that page, and the page will be filtered from menus if the user does not have the role.

                Roles can be read from the `roles` field on the user object. It should be an array of strings which are the role names. If the provider returns a `roles` field on the user profile then this will be used, otherwise the `auth.userFields` configuration can be used to map another field to the `roles` field on the user object. Custom auth callback plugins can also be used to add a roles field to the user object.

                ## Examples

                ######  Setting user roles to the `my_roles` field returned from provider:
                ```yaml
                lowdefy: {{ version }}
                auth:
                  userFields:
                    roles: profile.my_roles
                ```

                The pages that are protected by roles are configured in the `auth.roles` section in the Lowdefy configuration. This should be an object, where the keys are the role names, and the values are an array of pageIds that are protected by that role.

                ###### Protect pages using roles:
                ```yaml
                lowdefy: {{ version }}
                auth:
                  roles:
                    user-admin:
                      - users
                      - new-user
                      - edit-user
                    sales:
                      - customers
                      - new-customer
                      - edit-customer
                    reports:
                      - sales-report
                      - operations-report
                ```
      - _ref:
          path: templates/navigation_buttons.yaml
          vars:
            previous_page_title: Protected Pages
            previous_page_id: protected-pages
            next_page_title: User Object
            next_page_id: user-object
