# Copyright 2020-2024 Lowdefy, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_ref:
  path: templates/general.yaml.njk
  vars:
    pageId: protected-pages-apis
    pageTitle: Protected Pages and APIs
    section: User Authentication
    filePath: users/protected-pages-apis.yaml
    content:
      - id: content
        type: MarkdownWithCode
        properties:
          content:
            _nunjucks:
              on:
                version:
                  _ref: version.yaml
              template: |
                By default, all pages and APIs in a Lowdefy app are public. Protected pages and APIs are resources that can only be accessed by a logged in user. If a user that is not logged in tries to access a protected page or API, they will receive an authentication error. For pages, the user will be redirected to the 404 page, and pages that a user is not allowed to see will be filtered from the app menus. For APIs, an "API Endpoint does not exist" error will be thrown.

                The config can either be set to protect all pages/APIs, except for a list of public ones, or vice-versa, all are public except for a list of protected ones.

                Protected and public pages and APIs can be configured in the `auth.pages` and `auth.api` sections of the Lowdefy configuration. Here the fields `protected` and `public` can be set to true, or a list of page/API IDs. You cannot set `protected` or `public` to `false`, and both can't be an array or `true` at the same time.

                When protecting all pages in the app, you will need to set at least one page as public to allow users to log in to the app.

                The 404 page (used to indicate that a requested page cannot be found) is always a public page. A default 404 page will be created if you do not specify one, but if you create a page with pageId `'404'` then that page will be the 404 page.

                ## Examples

                ###### List specific public pages and APIs:
                ```yaml
                lowdefy: {{ version }}
                auth:
                  pages:
                    protected: true
                    public:
                      - '404'
                      - login
                      - public-page
                  api:
                    protected: true
                    public:
                      - health_check
                      - get_public_content
                ```

                ###### List specific protected pages and APIs:
                ```yaml
                lowdefy: {{ version }}
                auth:
                  pages:
                    public: true
                    protected:
                      - admin
                      - users
                  api:
                    public: true
                    protected:
                      - update_user_settings
                      - admin_dashboard_api
                ```

                ###### Mixed configuration:
                ```yaml
                lowdefy: {{ version }}
                auth:
                  # Protect specific pages while keeping most public
                  pages:
                    public: true
                    protected:
                      - dashboard
                      - profile
                      - settings

                  # Protect all API endpoints
                  api:
                    protected: true
                ```

                ## Important Notes

                - Pages and APIs are configured separately - protecting pages does not automatically protect APIs
                - Protected resources require users to be authenticated before access is granted
                - Role-based access control can be layered on top of protection for finer-grained permissions

      - _ref:
          path: templates/navigation_buttons.yaml
          vars:
            previous_page_title: Introduction
            previous_page_id: users-introduction
            next_page_title: Roles
            next_page_id: roles
