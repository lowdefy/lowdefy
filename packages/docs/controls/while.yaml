# Copyright 2020-2024 Lowdefy, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# TODO: Add back when while control implemented
_ref:
  path: templates/controls.yaml.njk
  vars:
    pageId: :while
    pageTitle: :while
    filePath: controls/while.yaml
    types: |
      ```
      ({:while: boolean, :do: routine}): void
      ```
    description: |
      The `:while` control implements a while loop within a routine. The routine defined in the `:do` key will be repeated as long as the test defined using the `:while` key is true.
    controlKeys: |
      - `:while: boolean`: __Required__ - The test that will determine whether or not the defined routine should execute again.
      - `:do: routine`: __Required__ - The routine to run while the test condition holds.
    examples: |
      ###### Simple Example
      ```
      - :set_state:
          count: 0
      - :while:
          _lt:
            - _state: count
            - 5
        :do:
          - :log:
              _item: count
          - :set_state:
              count:
                _sum:
                  - _state: count
                  - 1
      ```
      Logs:
      ```
      0
      1
      2
      3
      4
      ```
