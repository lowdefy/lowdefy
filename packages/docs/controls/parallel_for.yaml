# Copyright 2020-2024 Lowdefy, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_ref:
  path: templates/controls.yaml.njk
  vars:
    pageId: :parallel_for
    pageTitle: :parallel_for
    filePath: controls/parallel_for.yaml
    types: |
      ```
      ({:parallel_for: string, :in: any[], :do: routine}): void
      ```
    description: |
      The `:parallel_for` control executes a routine for each item in an array simultaneously. Each iteration has access to its array item through the [`_item`](/_item) operator using the key specified in `:parallel_for`.
      Unlike sequential [`:for`](/:for), all iterations start at the same time, making it ideal for processing independent items where order doesn't matter.
      The control waits for all iterations to complete before continuing, unless an error, rejection, or return occurs.
    controlKeys: |
      - `:parallel_for: string`: __Required__ - Used to define the key that can be used to access the value of the array item of the executing iteration.
      - `:in: any`: __Required__ - Used to define the array of data to iterate over.
      - `:do: routine`: __Required__ - Used to define the routine that will be executed for each array item in parallel.
    examples: |
      ###### Update Multiple Users
      ```yaml
      - :parallel_for: user_id
        :in:
          _payload: user_ids
        :do:
          id: update_last_seen
          type: MongoDBUpdateOne
          connectionId: users
          properties:
            filter:
              _id:
                _item: user_id
            update:
              $set:
                last_seen:
                  _date: now
      ```
